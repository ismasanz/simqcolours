
(function(){var method;var noop=function(){};var methods=['assert','clear','count','debug','dir','dirxml','error','exception','group','groupCollapsed','groupEnd','info','log','markTimeline','profile','profileEnd','table','time','timeEnd','timeStamp','trace','warn'];var length=methods.length;var console=(window.console=window.console||{});while(length--){method=methods[length];if(!console[method]){console[method]=noop;}}}());(function($){'use strict';var SUBCLASS=function(Class,opt){var Constructor=function(){Class.apply(this,arguments);};Constructor.prototype=Object.create(Class.prototype);Constructor.fn=Constructor.prototype;Constructor.fn.constructor=Constructor;for(var key in opt){Constructor.fn[key]=opt[key];}
return Constructor;};var Range=function(ini,end,opts){if(arguments.length<2){throw this.InitError;}
this.ini=ini;this.end=end;for(var key in opts){this[key]=opts[key];}
if(typeof this.ini!=='number'||typeof this.end!=='number'||typeof this.step!=='number'||this.ini>this.end&&this.step>0||this.ini<this.end&&this.step<0){throw this.InitError;}};Range.prototype.step=1;Range.prototype.ini_inc=true;Range.prototype.end_inc=false;Range.prototype.InitError=new Error('Range: invalid arguments.');Range.prototype.match=function(val){return!this.lowerOverflow(val)&&!this.upperOverflow(val);};Range.prototype.lowerOverflow=function(val){if(typeof val!==typeof this.ini){throw Error('Range: expected parameter of type '+typeof this.ini);}
return(this.ini_inc)?val<this.ini:val<=this.ini;};Range.prototype.upperOverflow=function(val){if(typeof val!==typeof this.end){throw Error('Range: expected parameter of type '+typeof this.end);}
return(this.end_inc)?val>this.end:val>=this.end;};Range.prototype.first=function(){return(this.ini_inc)?this.ini:this.ini+this.step;};Range.prototype.last=function(){return(this.end_inc)?this.end:this.end-this.step;};var Color=function(color){var ok=false,that=this;if(arguments.length===this.channelNames.length){color=Array.prototype.slice.apply(arguments);if(!color.every(function(el){return typeof el==='number'})){throw new Error(this.model.toUpperCase()+'Color: expected '+this.channelNames.length+' numeric arguments.');}}
if(Array.isArray(color)){color.forEach(function(value,idx){var channelName=that.channelNames[idx];that[channelName]=value;});}
else if(typeof color==='string'){if(!this.definitions||!this.definitions.length){throw new Error(this.model.toUpperCase()+'Color: does not support initialization from string.');}
if(color.charAt(0)==='#'){color=color.substr(1,6);}
color=color.replace(/ /g,'');color=color.toLowerCase();this.definitions.forEach(function(def){if(ok){return;}
var bits=def.re.exec(color);if(bits){ok=true;that.constructor.call(that,def.process(bits),model);}});if(!ok){throw new Error(this.model.toUpperCase()+'Color: failed from string "'+color+'".');}}
else{throw new Error(this.model.toUpperCase()+'Color: expected argument of type array or string, got: '+typeof color);}
this.check();};Color.prototype.check=function(){var that=this;this.channelNames.forEach(function(channelName,idx){var range=that.ranges[channelName],value=that[channelName];if(range.lowerOverflow(value)){that[channelName]=range.first();}
else if(range.upperOverflow(value)){that[channelName]=range.last();}});return this;};Color.prototype.match=function(qcolor){return qcolor.match(this);};var models={RGB:{model:'rgb',channelNames:['r','g','b'],ranges:{r:new Range(0,256),g:new Range(0,256),b:new Range(0,256)},definitions:[{re:/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,process:function(bits){return[parseInt(bits[1]),parseInt(bits[2]),parseInt(bits[3])];}},{re:/^(\w{2})(\w{2})(\w{2})$/,process:function(bits){return[parseInt(bits[1],16),parseInt(bits[2],16),parseInt(bits[3],16)];}},{re:/^(\w{1})(\w{1})(\w{1})$/,process:function(bits){return[parseInt(bits[1]+bits[1],16),parseInt(bits[2]+bits[2],16),parseInt(bits[3]+bits[3],16)];}}],toHSL:function(){var r=this.r/255,g=this.g/255,b=this.b/255,h,s,l,d,M=Number.NEGATIVE_INFINITY,m=Number.POSITIVE_INFINITY;M=Math.max.call(Math,r,g,b);m=Math.min.call(Math,r,g,b);d=M-m;if(d==0){h=0;}
else if(M==r){h=((g-b)/d)%6;}
else if(M==g){h=(b-r)/d+2;}
else{h=(r-g)/d+4;}
h*=60;if(h<0){h+=360;}
l=(M+m)/2;if(d==0){s=0;}
else{s=d/(1-Math.abs(2*l-1));}
s*=100;l*=100;return new $.HSLColor(h,s,l);},toString:function(opt){var r,g,b;if(opt===16||typeof opt==='string'&&opt.toLowerCase()==='hex'){r=Math.round(this.r).toString(16);g=Math.round(this.g).toString(16);b=Math.round(this.b).toString(16);if(r.length==1){r='0'+r;}
if(g.length==1){g='0'+g;}
if(b.length==1){b='0'+b;}
return'#'+r+g+b;}
else{return'rgb('+this.r.toFixed()+', '+this.g.toFixed()+', '+this.b.toFixed()+')';}}},HSL:{model:'hsl',channelNames:['h','s','l'],ranges:{h:new Range(0,360),s:new Range(0,100,{end_inc:true,step:0.1}),l:new Range(0,100,{end_inc:true,step:0.1})},toRGB:function(){var h=this.h,s=this.s/100,l=this.l/100,C,hh,X,r,g,b,m,rgb;C=(1-Math.abs(2*l-1))*s;hh=h/60;X=C*(1-Math.abs(hh%2-1));r=g=b=0;if(hh>=0&&hh<1){r=C;g=X;}
else if(hh>=1&&hh<2){r=X;g=C;}
else if(hh>=2&&hh<3){g=C;b=X;}
else if(hh>=3&&hh<4){g=X;b=C;}
else if(hh>=4&&hh<5){r=X;b=C;}
else{r=C;b=X;}
m=l-C/2;rgb=[r,g,b].map(function(ch){return(ch+m)*255;});return new $.RGBColor(rgb);},toString:function(){return'hsl('+this.h.toFixed()+', '+this.s.toFixed()+'%, '+this.l.toFixed()+'%)';}}};var QColor=function(){var label,opts;if(arguments.length==1){opts=arguments[0];}
else if(arguments.length>=2){label=arguments[0];opts=arguments[1];}
if(label){this.label=label;}
for(var key in opts){this[key]=opts[key];}};QColor.prototype.mean=function(){var that=this,color=new($[this.model.toUpperCase()+'Color'])(0,0,0);var mean=color.channelNames.map(function(channelName){var range=that[channelName][0];color[channelName]=(range.first()+range.last())/2;});return color;};QColor.prototype.first=function(){var that=this,color=new($[this.model.toUpperCase()+'Color'])(0,0,0);var mean=color.channelNames.map(function(channelName){var range=that[channelName][0];color[channelName]=range.first();});return color;};QColor.prototype.last=function(){var that=this,color=new($[this.model.toUpperCase()+'Color'])(0,0,0);var mean=color.channelNames.map(function(channelName){var range=that[channelName][0];color[channelName]=range.last();});return color;};QColor.prototype.match=function(color){var that=this,expected=this.model.toUpperCase()+'Color';if(!color instanceof $[expected]){throw new Error(this.constructor+': expected 1 argument of type '+expected+'.');}
return color.channelNames.every(function(channelName){var channelValue=color[channelName],channelRanges=that[channelName];return channelRanges.some(function(range){return range.match(channelValue);});});};var HSL_QCOLOR_CLASS=function(opt){if(opt){opt.model='hsl';}else{opt={model:'hsl'};}
return SUBCLASS(QColor,opt);};var FRange=SUBCLASS(Range,{step:0.1});var FRangeInv=SUBCLASS(FRange,{ini_inc:false,end_inc:true});var RangeInv=SUBCLASS(Range,{ini_inc:false,end_inc:true});var Greyscale=HSL_QCOLOR_CLASS({h:[new Range(0,360)],s:[new FRange(0,20,{end_inc:true})]});var Rainbow=HSL_QCOLOR_CLASS({s:[new FRangeInv(50,100)],l:[new FRangeInv(40,55)]});var Pale=HSL_QCOLOR_CLASS({s:[new FRangeInv(20,50)],l:[new FRangeInv(40,100)]});var Light=HSL_QCOLOR_CLASS({s:[new FRangeInv(50,100)],l:[new FRangeInv(55,100)]});var Dark=HSL_QCOLOR_CLASS({s:[new FRangeInv(20,100)],l:[new FRange(0,40,{end_inc:true})]});var rainbow=[['red',{h:[new RangeInv(335,360),new Range(0,20,{end_inc:true})]}],['orange',{h:[new RangeInv(20,50)]}],['yellow',{h:[new RangeInv(50,80)]}],['green',{h:[new RangeInv(80,160)]}],['turquoise',{h:[new RangeInv(160,200)]}],['blue',{h:[new RangeInv(200,239)]}],['purple',{h:[new RangeInv(239,297)]}],['pink',{h:[new RangeInv(297,335)]}]];var colors=[new Greyscale('black',{l:[new FRange(0,20)]}),new Greyscale('dark_grey',{l:[new FRange(20,30)]}),new Greyscale('grey',{l:[new FRange(30,40)]}),new Greyscale('light_grey',{l:[new FRange(40,80)]}),new Greyscale('white',{l:[new FRange(80,100,{end_inc:true})]})];rainbow.forEach(function(elem){var label=elem[0],opt=elem[1];colors.push(new Rainbow(label,opt));colors.push(new Pale('pale_'+label,opt));colors.push(new Light('light_'+label,opt));colors.push(new Dark('dark_'+label,opt));});$.Range=Range;Object.keys(models).forEach(function(model){$[model+'Color']=SUBCLASS(Color,models[model]);});$.color_definitions=colors;$.perception=function(color){var result=[];colors.forEach(function(qcolor){if(qcolor.match(color)){result.push(qcolor.label);}});if(result.length===0||result.length>1){throw new Error(result.length+' perceptions ['+result.join(', ')+'] from '+color.toString());}
return result[0];};}(jQuery));(function($){'use strict';var _resize=50,_k=4;$.fn.createAnalyzer=function(resize,k){if(!this.is('img')){return undefined;}
if(resize){_resize=resize;}
if(k){_k=k;}
return new CanvasImage(this.attr('src'));};var CanvasImage=function(src,resize){var canvas=document.createElement('canvas');var context=canvas.getContext('2d');var i=new Image();var that=this;this.loaded=false;i.onload=function(){var bigger,factor;if(!resize){that.resized=new CanvasImage(src,_resize);that.resized.parent=that;}else{bigger=(i.width>i.height)?i.width:i.height;factor=(bigger-resize)/bigger;i.width=i.width-i.width*factor;i.height=i.height-i.height*factor;}
canvas.width=i.width;canvas.height=i.height;context.drawImage(i,0,0,i.width,i.height);that.original=that.getData();if(!that.resized){that.parent.loaded=true;that.parent.$.trigger('load');}};i.src=src;this.context=context;this.image=i;this.$=$(this);return(resize)?this:this.$;}
CanvasImage.prototype.getData=function(){return this.context.getImageData(0,0,this.image.width,this.image.height);};CanvasImage.prototype.setData=function(data){return this.context.putImageData(data,0,0);};CanvasImage.prototype.reset=function(){this.setData(this.original);};CanvasImage.prototype.transform=function(fn,factor){var olddata=this.original;var oldpx=olddata.data;var newdata=this.context.createImageData(olddata);var newpx=newdata.data;var res=[];var len=newpx.length;for(var i=0;i<len;i+=4){res=fn.call(this,oldpx[i],oldpx[i+1],oldpx[i+2],oldpx[i+3],factor,i);newpx[i]=res[0];newpx[i+1]=res[1];newpx[i+2]=res[2];newpx[i+3]=res[3];}
this.setData(newdata);};CanvasImage.prototype.analyze=function(){var px=this.resized.original.data,num=(num===undefined||+num<1)?1:+num;var len=px.length,num_px=px.length/4,kmeans=KMEANS(),result,perceptionCounter={},centroidCounter={};var data=new Array(num_px);for(var i=0,j=0;i<len;i+=4,j+=1){data[j]=new Array(3);data[j][0]=px[i];data[j][1]=px[i+1];data[j][2]=px[i+2];}
kmeans.k(_k);result=kmeans(data);result.perceptions=Array(result.centroids.length);result.centroids.forEach(function(center,idx){var rgb=new $.RGBColor(center);result.perceptions[idx]=$.perception(rgb.toHSL());});result.perceptions.forEach(function(element,idx){perceptionCounter[element]=0;centroidCounter[idx]=0;});result.assignments.forEach(function(centroid,idx){var per=result.perceptions[centroid];perceptionCounter[per]+=1;centroidCounter[centroid]+=1;});result.rank=[];Object.keys(perceptionCounter).forEach(function(per,idx){var centroids=[];Object.keys(centroidCounter).forEach(function(centroid){if(result.perceptions[centroid]==per){centroids.push({centroid:result.centroids[centroid],count:centroidCounter[centroid]});}});centroids.sort(function(a,b){return b.count-a.count;});centroids=centroids.map(function(el){return el.centroid;});result.rank.push({perception:per,percent:perceptionCounter[per]/num_px,'centroids':centroids});});result.rank.sort(function(a,b){return b.percent-a.percent;});this.result=result;this.$.trigger('analyzed');};var euclidean=function(a,b){var n=a.length,i=-1,s=0,x;while(++i<n){x=a[i]-b[i];s+=x*x;}
return Math.sqrt(s);};var KMEANS=function(){var distance=euclidean,maxIterations=1000,k=1;function kmeans(vectors){var n=vectors.length,assignments=[],clusterSizes=[],repeat=1,iterations=0,centroids=science_stats_kmeansRandom(k,vectors),newCentroids,i,j,x,d,min,best;while(repeat&&iterations<maxIterations){j=-1;while(++j<k){clusterSizes[j]=0;}
i=-1;while(++i<n){x=vectors[i];min=Infinity;j=-1;while(++j<k){d=distance.call(this,centroids[j],x);if(d<min){min=d;best=j;}}
clusterSizes[assignments[i]=best]++;}
newCentroids=[];i=-1;while(++i<n){x=assignments[i];d=newCentroids[x];if(d==null)newCentroids[x]=vectors[i].slice();else{j=-1;while(++j<d.length){d[j]+=vectors[i][j];}}}
j=-1;while(++j<k){x=newCentroids[j];d=1/clusterSizes[j];i=-1;while(++i<x.length)x[i]*=d;}
repeat=0;j=-1;while(++j<k){if(!science_stats_kmeansCompare(newCentroids[j],centroids[j])){repeat=1;break;}}
centroids=newCentroids;iterations++;}
return{assignments:assignments,centroids:centroids};}
kmeans.k=function(x){if(!arguments.length)return k;k=x;return kmeans;};kmeans.distance=function(x){if(!arguments.length)return distance;distance=x;return kmeans;};return kmeans;};function science_stats_kmeansCompare(a,b){if(!a||!b||a.length!==b.length)return false;var n=a.length,i=-1;while(++i<n)if(a[i]!==b[i])return false;return true;}
function science_stats_kmeansRandom(k,vectors){var n=vectors.length;if(k>n)return null;var selected_vectors=[];var selected_indices=[];var tested_indices={};var tested=0;var selected=0;var i,vector,select;while(selected<k){if(tested===n)return null;var random_index=Math.floor(Math.random()*n);if(random_index in tested_indices)continue;tested_indices[random_index]=1;tested++;vector=vectors[random_index];select=true;for(i=0;i<selected;i++){if(science_stats_kmeansCompare(vector,selected_vectors[i])){select=false;break;}}
if(select){selected_vectors[selected]=vector;selected_indices[selected]=random_index;selected++;}}
return selected_vectors;}}(jQuery));